@mixin buttonAnimation {
    position: relative;
    text-decoration: none;
        &:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0%;
            border-bottom: 2px solid color(primary);
            transition: all .2s linear;
        }
        &:hover {
            &:after {
                width: 100%;
            }
        }
}

@mixin positionCenter {
    &-container {
        position: relative;
    }

    &-content {
        text-align: center;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin flexPosition($justCont:center, $alignIte: center, $direction: column) {
    display: flex;
    justify-content: $justCont;
    align-items: $alignIte;
    flex-direction: $direction;
}

@mixin setBackground($imageUrl, $height) {
    background-image: url($imageUrl);
    width: 100%;
    height: $height;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
}

@mixin solidButton($width: 200 ,$radius: 1) {
    background-color: color(primary);
    min-width: #{$width}px;
    max-width: #{$width}px;
    color: color(quaternary);
    border-radius: #{$radius}rem;

    &:hover {
        background-color: darken(color(primary), 20%);
    }
}

@mixin buttonOutline($width: 200 ,$height: 38, $color: color(primary), $hoverColor: color(quaternary), $bgColor: color(primary), $radius: 1) {
    width: #{$width}px;
    height: #{$height}px;
    color: $color;
    border-radius: #{$radius}rem;
    border: 1px solid $color;
    transition: all .2s linear;

    &:hover {
        border-color: $hoverColor;
        background-color: $bgColor;
        color: $hoverColor;
    }
}

@mixin linkStyling($color) {
    color: $color;
    transition: color .2s linear;

    &:hover {
        color: darken($color, 10%);
    }
}

@mixin headingStyling {
    &-heading {
        text-align: center;
        padding: 1.5rem 0;
        &-title {
            font-size: size(lg);
        }

        &-description{
            font-size: size(sm);
            color: lighten(color(secondary), 10%);
        }
    }
}

@mixin arrowStyling($content) {
    &-icon {
        position: relative;
        background-image: none;
        &::before {
            content: $content;
            position: absolute;
            top: 0%;
            color: color(secondary);
            font-size: size(lg);
        }
    }
}

@mixin pseudoStyling($keyword, $color, $width, $height) {
    position: relative;

    &::#{$keyword} {
        content: '';
        position: absolute;
        width: #{$width}rem;
        height: #{$height}rem;
        left: 0;
        background-color: color($color);
    }
}

@mixin imgOverlay($amount: 0.8) {
    &-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: transparentize(color(secondary), $amount);
    }
}

@mixin brand($name) {
    &-brand {
        font-family: 'Pacifico', cursive;
        color: color(primary);
        font-size: size(md);

        &:hover {
            @extend .#{$name}-brand;
        }
    }
}

@mixin formControl {
    &-control {
        border-radius: .1rem;
        border: 1px solid lighten(color(secondary), 50%);
        color: color(secondary);

        &:focus {
            outline: none;
            box-shadow: none;
            border-color: color(primary);
        }
    }
}

@mixin formSelectControl {
    &-select-control {
        border: 1px solid lighten(color(secondary), 50%);
        border-radius: .1rem;
      }
    
      select {
        &.form-control {
          border: 0px;
          height: 35px;
        }
      }
}

@mixin formValidation {
    &:valid {
        background-image: none;
        &:focus {
            box-shadow: none;
        }
    }

    &:invalid {
        @extend .form-control:valid;
    }
}

@mixin hiddenInput {
    /* Hide default input button */
    position: absolute;
    border: 0;
    clip: rect(0,0,0,0);
    height: 1px;
    width: 1px;
    overflow: hidden;
    white-space: nowrap;
}

@mixin visibleTransition($status) {
    @if($status == invisible) {
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.5s linear;
    }

    @if($status == visible) {
        visibility: visible;
        opacity: 1;
    }
}

@mixin response($breakpoint) {
    @if($breakpoint == sm) {
        @media(min-width: 576px) {
            @content;
        }
    }

    @if($breakpoint == md) {
        @media(min-width: 768px) {
            @content;
        }
    }

    @if($breakpoint == lg) {
        @media(min-width: 992px) {
            @content;
        }
    }

    @if($breakpoint == xl) {
        @media(min-width: 1200px) {
            @content;
        }
    }
    
}

@mixin hideScrollBar {
    ::-webkit-scrollbar {
        width: 0;
        background-color: transparent;
    }
}

@mixin tableMobile {
    .table {
        color: color(secondary);
    
        thead {
            display: block;
            position: absolute;
            top: -99999px;
            left: -99999px;
            color: transparent;
        }
    
        tbody {
            display: block;
            tr {
                @extend tbody;
                background-color: color(quaternary);
                padding: 0 1rem .4rem 1rem;
                margin-bottom: 1rem;
                box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
                border-radius: .2rem;
                transition: transform .2s linear, box-shadow .2s linear;
    
                &:last-child {
                    margin-bottom: 0;
                }
    
                &:hover {
                    color: color(secondary);
                    cursor: pointer;
                    transform: translateY(-5px);
                    box-shadow: 0 .5rem 1rem rgba(0,0,0,.15);
                }
            }
    
            td {
                @extend tbody;
                position: relative;
                border-bottom: 1px solid lighten(color(secondary), 55%);
                padding-left: 50%;
    
                &::before {
                    position: absolute;
                    top: .75rem;
                    left: .75rem;
                    width: 45%;
                    white-space: nowrap;
                }
    
                @for $i from 1 through 5 {
                    &:nth-of-type(#{$i}) {
                        &:before {
                            content: map-get($headers, $i);
                            font-weight: weight(bold);
                        }
                    }
                }
            }
        }
    }
}

@mixin tableFullSize {
    .table {    
        &-wrapper {
            @include response(md) {
                width: 100%;
                background-color: color(quaternary);
                padding: 0 1rem .4rem 1rem;
                border-radius: .2rem;
                box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
            }
        }
    
        thead {
            @include response(md) {
                border-bottom: 2px solid lighten(color(secondary), 55%);
                display: table-header-group;
                position: unset;
                color: color(secondary);
            }
        }
    
        tbody {
            @include response(md) {
                display: table-row-group;
    
                tr {
                    color: lighten(color(secondary), 10%);
                    transition: all .1s linear;
                    display: table-row;
                    background-color: color(quaternary);
                    padding: unset;
                    margin-bottom: 0;
                    box-shadow: unset;
                    border-radius: unset;
    
                    &:hover {
                        background-color: lighten(color(secondary), 55%);
                        color: color(primary);
                        transform: unset;
                        box-shadow: unset;
                        cursor: pointer;
                    }
                }
    
                td {
                    display: table-cell;
                    position: relative;
                    border-bottom: unset;
                    padding: .75rem;
    
                    &::before {
                        position: unset;
                        width: unset;
                        white-space: nowrap;
                    }
    
                    @for $i from 1 through 5 {
                        &:nth-of-type(#{$i}) {
                            &:before {
                                content: '';
                            }
                        }
                    }
                }
            }
        }
    }
}